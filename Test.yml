AWSTemplateFormatVersion: "2010-09-09"
Description: Test template
Resources:
  #VPC
  TestVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.1.0.0/16
      InstanceTenancy: default
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: Test-VPC
  #subunet
  TestSubnet1a:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.1.0.0/24
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      VpcId: !Ref TestVPC
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: TestSubnet1a
  TestSubnet1c:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.1.1.0/24
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      VpcId: !Ref TestVPC
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: TestSubnet1c
  #InternetGateway
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: Test-igw
    # VPCGatewayAttachment
  AttachGateway:
      Type: 'AWS::EC2::VPCGatewayAttachment'
      Properties:
        VpcId: !Ref TestVPC
        InternetGatewayId: !Ref InternetGateway
  # RouteTable
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref TestVPC
      Tags:
        - Key: Name
          Value: Test-RTB
  Route1:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  RouteLocal:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref TestSubnet1a

